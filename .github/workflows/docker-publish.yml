name: Conditional Docker Builds and Pushes to AWS ECR

on:
  push:
    branches:
      - main
    paths:
      - 'docker/cbdb/build/rocky9/**'
      - 'docker/cbdb/build/ubuntu24/**'

jobs:
  filter:
    runs-on: ubuntu-latest
    steps:
      - name: Paths filter
        id: filter
        uses: dorny/paths-filter@v3  # Use the latest v3.x.x version
        with:
          filters:
            rocky9:
              - 'docker/cbdb/build/rocky9/**'
            ubuntu24:
              - 'docker/cbdb/build/ubuntu24/**'

    outputs:  # Move the outputs section to be inside steps
      rocky9_changed: ${{ steps.filter.outputs.rocky9 }}
      ubuntu24_changed: ${{ steps.filter.outputs.ubuntu24 }}

  cbdb-build-rocky9:
    runs-on: ubuntu-latest
    needs: filter
    if: needs.filter.outputs.rocky9_changed == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: aws ecr-public get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_PUBLIC_ENDPOINT }}

      - name: Build and tag Docker image for cbdb-build-rocky9
        run: |
          docker build -t ${{ secrets.ECR_PUBLIC_ENDPOINT }}/cbdb/build/rocky9:latest ./docker/cbdb/build/rocky9
          docker push ${{ secrets.ECR_PUBLIC_ENDPOINT }}/cbdb/build/rocky9:latest

  cbdb-build-ubuntu24:
    runs-on: ubuntu-latest
    needs: filter
    if: needs.filter.outputs.ubuntu24_changed == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: aws ecr-public get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_PUBLIC_ENDPOINT }}

      - name: Build and tag Docker image for cbdb-build-ubuntu24
        run: |
          docker build -t ${{ secrets.ECR_PUBLIC_ENDPOINT }}/cbdb/build/ubuntu24:latest ./docker/cbdb/build/ubuntu24
          docker push ${{ secrets.ECR_PUBLIC_ENDPOINT }}/cbdb/build/ubuntu24:latest
