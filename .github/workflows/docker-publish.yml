name: Conditional Docker Builds and Pushes to AWS ECR

# This workflow triggers on push events to the main branch, but only when changes are made
# to files in the 'docker/cbdb/build/rocky9/' directory. It is used to build and push
# Docker images to AWS Elastic Container Registry (ECR) while avoiding Docker Hub's rate limits.

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch
    paths:
      - 'docker/cbdb/build/rocky9/**'  # Only trigger when files in this path change

jobs:
  cbdb-build-rocky9:
    if: contains(github.event.head_commit.message, 'docker/cbdb/build/rocky9')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        # This step checks out the repository's code so the workflow can access the files needed for the build.

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        # This step logs in to Docker Hub to prevent rate limits when pulling base images.

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        # This step sets up Docker Buildx, a Docker CLI plugin that extends the Docker command with the full support
        # of the features provided by Moby BuildKit builder toolkit. It is required for building multi-platform images.

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
        # This step configures the AWS credentials needed to authenticate and interact with AWS services like ECR.

      - name: Log in to Amazon ECR
        run: aws ecr-public get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
        # This step logs in to the Amazon Elastic Container Registry (ECR) public repository using the configured AWS credentials.
        # It is required before pushing the Docker image to ECR.

      - name: Build and tag Docker image for cbdb-build-rocky9
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/cbdb/build/rocky9:latest ./docker/cbdb/build/rocky9
          docker push     ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/cbdb/build/rocky9:latest
        # This step builds the Docker image from the Dockerfile located in './docker/cbdb/build/rocky9'
        # and tags it with the latest tag. It then pushes the tagged image to the specified ECR repository.
